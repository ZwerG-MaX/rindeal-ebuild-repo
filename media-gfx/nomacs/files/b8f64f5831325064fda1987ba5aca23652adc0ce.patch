From b8f64f5831325064fda1987ba5aca23652adc0ce Mon Sep 17 00:00:00 2001
From: Markus Diem <diemmarkus@gmail.com>
Date: Thu, 14 Dec 2017 13:44:09 +0100
Subject: [PATCH] optional codecov tests in cmake - addresses issue #170

---
 .travis.yml                | 18 +++++++++---------
 ImageLounge/CMakeLists.txt | 15 ++++++++-------
 2 files changed, 17 insertions(+), 16 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index b67f48fb..ce65a7d3 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,15 +18,15 @@ addons:
       - lcov
   
 before_script:
-  # OSX dependencies
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install qt5; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then CMAKE_ARGS="-DCMAKE_PREFIX_PATH=/usr/local/opt/qt5"; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install exiv2; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install libraw; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew tap homebrew/science; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install -v opencv3 --with-contrib --without-eigen --without-opencl --without-openexr --without-python --without-numpy --without-tests; fi
-  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew ln opencv3 --force; fi
+  # # OSX dependencies
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install qt5; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then CMAKE_ARGS="-DCMAKE_PREFIX_PATH=/usr/local/opt/qt5"; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install exiv2; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install libraw; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew tap homebrew/science; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install -v opencv3 --with-contrib --without-eigen --without-opencl --without-openexr --without-python --without-numpy --without-tests; fi
+  # - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew ln opencv3 --force; fi
 
   # Linux dependencies
   - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update; fi
diff --git a/ImageLounge/CMakeLists.txt b/ImageLounge/CMakeLists.txt
index d6f9775d..0edd08e8 100644
--- a/ImageLounge/CMakeLists.txt
+++ b/ImageLounge/CMakeLists.txt
@@ -22,12 +22,6 @@ set(NOMACS_VERSION_PATCH 0)
 set(NOMACS_VERSION ${NOMACS_VERSION_MAJOR}.${NOMACS_VERSION_MINOR})
 set(NOMACS_FULL_VERSION ${NOMACS_VERSION}.${NOMACS_VERSION_PATCH})
 
-# Codecov
-if(CMAKE_COMPILER_IS_GNUCXX)
-    include("cmake/CodeCoverage.cmake")
-    setup_target_for_coverage(${PROJECT_NAME}_coverage tests coverage)
-endif()
-
 if(CMAKE_CL_64)
 	SET(NMC_ARCHITECTURE "x64")
 else()
@@ -51,6 +45,13 @@ option(ENABLE_INCREMENTER "Run Build Incrementer" OFF)
 option(ENABLE_TRANSLATIONS "Compile Translations" OFF)
 option(ENABLE_READ_BUILD "Build nomacs for READ" OFF)
 option(ENABLE_PLUGINS "Compile nomacs with plugin support" ON)
+option(ENABLE_CODE_COV "Run Code Coverage tests" OFF)
+
+# Codecov
+if( ENABLE_CODE_COV AND CMAKE_COMPILER_IS_GNUCXX)
+    include("cmake/CodeCoverage.cmake")
+    setup_target_for_coverage(${PROJECT_NAME}_coverage tests coverage)
+endif()
 
 if(APPLE)
 	option(ENABLE_QUAZIP "Compile with QuaZip (allows opening .zip files)" OFF)
@@ -98,7 +99,7 @@ elseif(NOT MSVC)
 	message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
 endif()
 
-if(CMAKE_COMPILER_IS_GNUCXX)
+if (ENABLE_CODE_COV AND CMAKE_COMPILER_IS_GNUCXX)
 	# Codecov
 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic -pthread -g -O0 -fprofile-arcs -ftest-coverage")
 endif()
